"""
Django settings for hello_django project.

Generated by 'django-admin startproject' using Django 3.0.8.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
import sys

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
sys.path.insert(1,os.path.join(BASE_DIR,'apps'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'f$!92m8394cgi4w6z2sn-3y_-6=w0^0(wqecefah466+u^(#va'
# SECRET_KEY=os.environ.get('SECRET_KEY')
# SECURITY WARNING: don't run with debug turned on in production!

DEBUG = True
# DEBUG=int(os.environ.get('DEBUG',default=0))

ALLOWED_HOSTS = ['*']
# ALLOWED_HOSTS=os.environ.get('ALLOWED_HOSTS').split(' ')

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'news',
    'music',
    'django.contrib.postgres',
    'django_celery_beat',
    'djcelery',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'hello_django.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'hello_django.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE':'django.db.backends.postgresql',
        'NAME':'runoobdb',
        'USER':'postgres',
        'PASSWORD':'14557231',
        'HOST':'127.0.0.1',
        'PORT':'5432'
        # 'ENGINE': os.environ.get("SQL_ENGINE","django.db.backends.sqlite3"),
        # 'NAME': os.environ.get("SQL_DATABASE",os.path.join(BASE_DIR, 'db.sqlite3')),
        # 'USER': os.environ.get("SQL_USER",'user'),
        # 'PASSWORD': os.environ.get("SQL_PASSWORD","password"),
        # 'HOST': os.environ.get("SQL_HOST","localhost"),
        # 'PORT': os.environ.get("SQL_PORT","5432"),
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/
LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'

# celery异步配置
CELERY_BROKER_URL='amqp://guest:@127.0.0.1:5672//' #推荐使用rabbitmq作为消息中间件broker
CELERY_ACCEPT_CONTENT=['json','msgpack','pickle','yaml'] #指定接受的内容类型
CELERY_TASK_SERIALIZER='json' #任务序列化方案
CELERY_RESULT_SERIALIZER = 'json' #任务结果序列化方案
# CELERY_RESULT_BACKEND= 'db+mysql://cai:qwe123@127.0.0.1/celery' #SQLAlchemy
# CELERY_RESULT_BACKEND='amqp://guest:@127.0.0.1:5672//' #rabbitmq
# CELERY_RESULT_BACKEND='djcelery.backends.database:DatabaseBackend' #django-celery数据库后端
# CELERY_RESULT_BACKEND='djcelery.backends.cache:CacheBackend' #django-celery缓存后端
CELERY_RESULT_BACKEND='redis://127.0.0.1:6379/15' #redis
CELERY_TASK_RESULT_EXPIRES=60*60*24 #任务过期时间
CELERY_TIMEZONE='Asia/Shanghai' #时区配置